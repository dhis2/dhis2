
ALTER TABLE dataelement ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE categorycombo ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE attribute ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE categoryoptioncombo ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE categoryoptiongroupset ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE categoryoptiongroup ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE dataelementcategoryoption ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE chart ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE colorset ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE color ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE constant ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE dashboarditem ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE dashboard ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE dataapprovallevel ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE dataapprovalworkflow ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE dataelementcategory ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE dataelementgroupset ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE dataelementgroup ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE dataentryform ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE dataset ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE document ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE eventchart ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE eventreport ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE indicatorgroupset ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE indicator ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE indicatortype ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE maplegendset ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE maplegend ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE map ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE mapview ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE optiongroupset ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE optiongroup ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE optionset ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE optionvalue ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE organisationunit ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE orgunitgroupset ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE orgunitgroup ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE orgunitlevel ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE predictorgroup ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE programindicatorgroup ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE programindicator ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE programmessage ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE programrule ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE programsection ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE programstagesection ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE programstage ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE program_attribute_group ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE program ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE relationshiptype ADD COLUMN IF NOT EXISTS translations jsonb;
ALTER TABLE reporttable ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE report ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE trackedentityattribute ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE trackedentitytype ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE usergroup ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE userrole ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE validationrule ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE indicatorgroup ADD COLUMN IF NOT EXISTS translations jsonb; 
ALTER TABLE validationrulegroup ADD COLUMN IF NOT EXISTS translations jsonb;

update dataelement o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join dataelementtranslations t on ot.objecttranslationid = t.objecttranslationid  where t.dataelementid = o.dataelementid );
update attribute o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join attributetranslations t on ot.objecttranslationid = t.objecttranslationid  where t.attributeid = o.attributeid );
update categorycombo o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join categorycombotranslations t on ot.objecttranslationid = t.objecttranslationid  where t.categorycomboid = o.categorycomboid );
update categoryoptioncombo o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join categoryoptioncombotranslations t on ot.objecttranslationid = t.objecttranslationid  where t.categoryoptioncomboid = o.categoryoptioncomboid );
update categoryoptiongroupset o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join categoryoptiongroupsettranslations t on ot.objecttranslationid = t.objecttranslationid  where t.categoryoptiongroupsetid = o.categoryoptiongroupsetid );
update categoryoptiongroup o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join categoryoptiongrouptranslations t on ot.objecttranslationid = t.objecttranslationid  where t.categoryoptiongroupid = o.categoryoptiongroupid );
update dataelementcategoryoption o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join categoryoptiontranslations t on ot.objecttranslationid = t.objecttranslationid  where t.categoryoptionid = o.categoryoptionid );
update chart o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join charttranslations t on ot.objecttranslationid = t.objecttranslationid  where t.chartid = o.chartid );
update colorset o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join colorsettranslations t on ot.objecttranslationid = t.objecttranslationid  where t.colorsetid = o.colorsetid );
update color o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join colortranslations t on ot.objecttranslationid = t.objecttranslationid  where t.colorid = o.colorid );                   
update constant o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join constanttranslations t on ot.objecttranslationid = t.objecttranslationid  where t.colorid = o.constantid );                                                 
update dashboarditem o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join dashboarditemtranslations t on ot.objecttranslationid = t.objecttranslationid  where t.dashboarditemid = o.dashboarditemid );
update dashboard o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join dashboardtranslations t on ot.objecttranslationid = t.objecttranslationid  where t.dashboardid = o.dashboardid );
update dataapprovallevel o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join dataapprovalleveltranslations t on ot.objecttranslationid = t.objecttranslationid  where t.dataapprovallevelid = o.dataapprovallevelid );
update dataapprovalworkflow o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join dataapprovalworkflowtranslations t on ot.objecttranslationid = t.objecttranslationid  where t.workflowid = o.workflowid );                           
update dataelementcategory o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join dataelementcategorytranslations t on ot.objecttranslationid = t.objecttranslationid  where t.categoryid = o.categoryid );                           
update dataelementgroupset o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join dataelementgroupsettranslations t on ot.objecttranslationid = t.objecttranslationid  where t.dataelementgroupsetid = o.dataelementgroupsetid );                           
update dataelementgroup o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join dataelementgrouptranslations t on ot.objecttranslationid = t.objecttranslationid  where t.dataelementgroupid = o.dataelementgroupid );
update dataentryform o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join dataentryformtranslations t on ot.objecttranslationid = t.objecttranslationid  where t.dataentryformid = o.dataentryformid );
update dataset o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join datasettranslations t on ot.objecttranslationid = t.objecttranslationid  where t.datasetid = o.datasetid );              
update document o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join documenttranslations t on ot.objecttranslationid = t.objecttranslationid  where t.documentid = o.documentid );              
update eventchart o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join eventcharttranslations t on ot.objecttranslationid = t.objecttranslationid  where t.eventchartid = o.eventchartid );              
update eventreport o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join eventreporttranslations t on ot.objecttranslationid = t.objecttranslationid  where t.eventreportid = o.eventreportid );              
update indicatorgroupset o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join indicatorgroupsettranslations t on ot.objecttranslationid = t.objecttranslationid  where t.indicatorgroupsetid = o.indicatorgroupsetid );                                
update indicator o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join indicatortranslations t on ot.objecttranslationid = t.objecttranslationid  where t.indicatorid = o.indicatorid );
update indicatortype o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join indicatortypetranslations t on ot.objecttranslationid = t.objecttranslationid  where t.indicatortypeid = o.indicatortypeid );
update maplegendset o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join maplegendsettranslations t on ot.objecttranslationid = t.objecttranslationid  where t.maplegendsetid = o.maplegendsetid );
update maplegend o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join maplegendtranslations t on ot.objecttranslationid = t.objecttranslationid  where t.maplegendid = o.maplegendid );
update map o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join maptranslations t on ot.objecttranslationid = t.objecttranslationid  where t.mapid = o.mapid );
update mapview o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join mapviewtranslations t on ot.objecttranslationid = t.objecttranslationid  where t.mapviewid = o.mapviewid );
update optiongroupset o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join optiongroupsettranslations t on ot.objecttranslationid = t.objecttranslationid  where t.optiongroupsetid = o.optiongroupsetid );
update optiongroup o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join optiongrouptranslations t on ot.objecttranslationid = t.objecttranslationid  where t.optiongroupid = o.optiongroupid );                         
update optionset o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join optionsettranslations t on ot.objecttranslationid = t.objecttranslationid  where t.optionsetid = o.optionsetid );                
update optionvalue o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join optionvaluetranslations t on ot.objecttranslationid = t.objecttranslationid  where t.optionvalueid = o.optionvalueid );                               
update organisationunit o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join organisationunittranslations t on ot.objecttranslationid = t.objecttranslationid  where t.organisationunitid = o.organisationunitid );                                                  
update orgunitgroupset o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join orgunitgroupsettranslations t on ot.objecttranslationid = t.objecttranslationid  where t.orgunitgroupsetid = o.orgunitgroupsetid );                                                  
update orgunitgroup o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join orgunitgrouptranslations t on ot.objecttranslationid = t.objecttranslationid  where t.orgunitgroupid = o.orgunitgroupid );
update orgunitlevel o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join orgunitleveltranslations t on ot.objecttranslationid = t.objecttranslationid  where t.orgunitlevelid = o.orgunitlevelid );                                       
update predictorgroup o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join predictorgrouptranslations t on ot.objecttranslationid = t.objecttranslationid  where t.predictorgroupid = o.predictorgroupid );
update programindicatorgroup o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join programindicatorgrouptranslations t on ot.objecttranslationid = t.objecttranslationid  where t.programindicatorgroupid = o.programindicatorgroupid );
update programindicator o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join programindicatortranslations t on ot.objecttranslationid = t.objecttranslationid  where t.programindicatorid = o.programindicatorid );
update programmessage o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join programmessagetranslations t on ot.objecttranslationid = t.objecttranslationid  where t.id = o.id );           
update programrule o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join programruletranslations t on ot.objecttranslationid = t.objecttranslationid  where t.programruleid = o.programruleid );                 
update programsection o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join programsectiontranslations t on ot.objecttranslationid = t.objecttranslationid  where t.programsectionid = o.programsectionid );
update programstagesection o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join programstagesectiontranslations t on ot.objecttranslationid = t.objecttranslationid  where t.programstagesectionid = o.programstagesectionid );
update programstage o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join programstagetranslations t on ot.objecttranslationid = t.objecttranslationid  where t.programstageid = o.programstageid );
update program_attribute_group o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join programtrackedentityattributegrouptranslations t on ot.objecttranslationid = t.objecttranslationid  where t.programtrackedentityattributegroupid = o.programtrackedentityattributegroupid );        
update program o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join programtranslations t on ot.objecttranslationid = t.objecttranslationid  where t.programid = o.programid );
update relationshiptype o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join relationshiptypetranslations t on ot.objecttranslationid = t.objecttranslationid  where t.relationshiptypeid = o.relationshiptypeid );
update reporttable o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join reporttabletranslations t on ot.objecttranslationid = t.objecttranslationid  where t.reporttableid = o.reporttableid );
update report o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join reporttranslations t on ot.objecttranslationid = t.objecttranslationid  where t.reportid = o.reportid );
update trackedentityattribute o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join trackedentityattributetranslations t on ot.objecttranslationid = t.objecttranslationid  where t.trackedentityattributeid = o.trackedentityattributeid );
update trackedentitytype o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join trackedentitytranslations t on ot.objecttranslationid = t.objecttranslationid  where t.trackedentitytypeid = o.trackedentitytypeid );
update usergroup o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join usergrouptranslations t on ot.objecttranslationid = t.objecttranslationid  where t.usergroupid = o.usergroupid );
update userrole o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join userroletranslations t on ot.objecttranslationid = t.objecttranslationid  where t.userroleid = o.userroleid );
update validationrule o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join validationruletranslations t on ot.objecttranslationid = t.objecttranslationid  where t.validationruleid = o.validationruleid );
update indicatorgroup o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join indicatorgrouptranslations t on ot.objecttranslationid = t.objecttranslationid  where t.indicatorgroupid = o.indicatorgroupid );
update validationrulegroup o set translations = (select to_jsonb(array_agg(jsonb_build_object('locale',locale,'property', property,'value', value ))) from objecttranslation ot inner join validationrulegrouptranslations t on ot.objecttranslationid = t.objecttranslationid  where t.validationrulegroupid = o.validationrulegroupid );
        
DROP TABLE IF EXISTS attributetranslations;
DROP TABLE IF EXISTS categorycombotranslations;
DROP TABLE IF EXISTS categoryoptioncombotranslations;
DROP TABLE IF EXISTS categoryoptiongroupsettranslations;
DROP TABLE IF EXISTS categoryoptiongrouptranslations;
DROP TABLE IF EXISTS categoryoptiontranslations;
DROP TABLE IF EXISTS charttranslations;
DROP TABLE IF EXISTS colorsettranslations;
DROP TABLE IF EXISTS colortranslations;
DROP TABLE IF EXISTS constanttranslations;
DROP TABLE IF EXISTS dashboarditemtranslations;
DROP TABLE IF EXISTS dashboardtranslations;
DROP TABLE IF EXISTS dataapprovalleveltranslations;
DROP TABLE IF EXISTS dataapprovalworkflowtranslations;
DROP TABLE IF EXISTS dataelementcategorytranslations;
DROP TABLE IF EXISTS dataelementgroupsettranslations;
DROP TABLE IF EXISTS dataelementgrouptranslations;
DROP TABLE IF EXISTS dataelementoperandtranslations;
DROP TABLE IF EXISTS dataelementtranslations;
DROP TABLE IF EXISTS dataentryformtranslations;
DROP TABLE IF EXISTS datasetsectiontranslations;
DROP TABLE IF EXISTS datasettranslations;
DROP TABLE IF EXISTS documenttranslations;
DROP TABLE IF EXISTS eventcharttranslations;
DROP TABLE IF EXISTS eventreporttranslations;
DROP TABLE IF EXISTS indicatorgroupsettranslations;
DROP TABLE IF EXISTS indicatorgrouptranslations;
DROP TABLE IF EXISTS indicatortranslations;
DROP TABLE IF EXISTS indicatortypetranslations;
DROP TABLE IF EXISTS interpretationcommenttranslations;
DROP TABLE IF EXISTS interpretationtranslations;
DROP TABLE IF EXISTS maplayertranslations;
DROP TABLE IF EXISTS maplegendsettranslations;
DROP TABLE IF EXISTS maplegendtranslations;
DROP TABLE IF EXISTS maptranslations;
DROP TABLE IF EXISTS mapviewtranslations;
DROP TABLE IF EXISTS messageconversationtranslations;
DROP TABLE IF EXISTS messagetranslations;
DROP TABLE IF EXISTS metadatafiltertranslations;
DROP TABLE IF EXISTS optiongroupsettranslations;
DROP TABLE IF EXISTS optiongrouptranslations;
DROP TABLE IF EXISTS optionsettranslations;
DROP TABLE IF EXISTS optionvaluetranslations;
DROP TABLE IF EXISTS organisationunittranslations;
DROP TABLE IF EXISTS orgunitgroupsettranslations;
DROP TABLE IF EXISTS orgunitgrouptranslations;
DROP TABLE IF EXISTS orgunitleveltranslations;
DROP TABLE IF EXISTS periodtranslations;
DROP TABLE IF EXISTS predictorgrouptranslations;
DROP TABLE IF EXISTS programattributestranslations;
DROP TABLE IF EXISTS programindicatorgrouptranslations;
DROP TABLE IF EXISTS programindicatortranslations;
DROP TABLE IF EXISTS programinstancetranslations;
DROP TABLE IF EXISTS programmessagetranslations;
DROP TABLE IF EXISTS programruleactiontranslations;
DROP TABLE IF EXISTS programruletranslations;
DROP TABLE IF EXISTS programrulevariabletranslations;
DROP TABLE IF EXISTS programsectiontranslations;
DROP TABLE IF EXISTS programstagedataelementtranslations;
DROP TABLE IF EXISTS programstageinstancetranslations;
DROP TABLE IF EXISTS programstagesectiontranslations;
DROP TABLE IF EXISTS programstagetranslations;
DROP TABLE IF EXISTS programtrackedentityattributegrouptranslations;
DROP TABLE IF EXISTS programtranslations;
DROP TABLE IF EXISTS programvalidationtranslations;
DROP TABLE IF EXISTS relationshiptypetranslations;
DROP TABLE IF EXISTS reporttabletranslations;
DROP TABLE IF EXISTS reporttranslations;
DROP TABLE IF EXISTS statisticstranslations;
DROP TABLE IF EXISTS trackedentityattributegrouptranslations;
DROP TABLE IF EXISTS trackedentityattributetranslations;
DROP TABLE IF EXISTS trackedentityinstanceremindertranslations;
DROP TABLE IF EXISTS trackedentityinstancetranslations;
DROP TABLE IF EXISTS trackedentitytranslations;
DROP TABLE IF EXISTS usergrouptranslations;
DROP TABLE IF EXISTS userinfotranslations;
DROP TABLE IF EXISTS userroletranslations;
DROP TABLE IF EXISTS usertranslations;
DROP TABLE IF EXISTS validationcriteriatranslations;
DROP TABLE IF EXISTS validationrulegrouptranslations;
DROP TABLE IF EXISTS validationruletranslations;
